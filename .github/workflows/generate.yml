name: Generate images

on: 
  workflow_dispatch:
    inputs:
      prompt:
        description: prompt for AI image generators

  push:
  schedule:
    - cron: '0 */3 * * *'  # Repeat every 3h

jobs:
  prompt:
    runs-on: ubuntu-latest
    if: ${{ !github.event.inputs.prompt }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Run prompt generator scripts
      working-directory: scripts
      run: |
        export CONFIGPATH=config
        sh prompt.sh

    - name: Upload prompt
      uses: actions/upload-artifact@v4
      with:
        name: prompt
        path: scripts/prompt.txt


  ai:
    strategy:
      matrix:
        model: [
          sd_xl_turbo_1.0.safetensors, 
          v2-1_768-ema-pruned.safetensors,
          v1-5-pruned-emaonly.safetensors,
          sd-v1-4-full-ema.ckpt
        ]
    runs-on: ubuntu-latest
    needs: prompt
    if: |
      always() &&
      (needs.prompt.result == 'success' || needs.prompt.result == 'skipped')

    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        
    - name: Download prompt
      if: ${{ !github.event.inputs.prompt }}
      uses: actions/download-artifact@v4
      with:
        name: prompt
        path: scripts

    - name: Config & run generator
      working-directory: scripts
      run: |
        export CONFIGPATH=config
        export MATRIXMODEL=${{ matrix.model }}
        export JOBINDEX=${{ strategy.job-index }}
        if [ -n "${{ github.event.inputs.prompt }}" ]; then
          echo "Using prompt from input, check artifacts"
          echo "${{ github.event.inputs.prompt }}" > prompt.txt
        else
          echo "Using prompt file"
        fi

        sh image.sh   

    - name: Upload image
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.model }}
        path: scripts/out


  push:
    runs-on: ubuntu-latest
    needs: ai
    if: ${{ !github.event.inputs.prompt }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v4
      with: 
        persist-credentials: false
        fetch-depth: 0

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: scripts/tmp
        merge-multiple: true

    - name: Cleanup repository
      working-directory: scripts
      run: |
        export CONFIGPATH=config
        sh push.sh  

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        force: true
